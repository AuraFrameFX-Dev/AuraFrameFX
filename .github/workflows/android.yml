name: Android CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

permissions:
  contents: read
  id-token: write

jobs:
  build:
    name: Build APK
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository code
      - name: Checkout code
        uses: actions/checkout@v4  # Use v4 for potential improvements

      # Step 2: Set up Java environment (CRITICAL!)
      - name: Set up JDK
        uses: actions/setup-java@v4 # Use v4 for potential improvements
        with:
          java-version: '17' # Or '21' if you're targeting that
          distribution: 'zulu' #  Recommended for GitHub Actions
          cache: 'gradle' #  Cache JDK installation

      # Step 3: Java version check (for debugging)
      - name: Check Java version
        run: java -version

      # Step 4: Make Gradle wrapper executable
      - name: Make Gradle wrapper executable
        run: chmod +x ./gradlew

      # Step 5: Cache Gradle dependencies
      - name: Cache Gradle dependencies
        uses: actions/cache@v4 # Use v4 for potential improvements
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      # Step 6: Build the APK
      - name: Build APK
        run: ./gradlew assembleDebug --stacktrace

      # Step 7: Upload the APK as an artifact
      - name: Upload APK
        uses: actions/upload-artifact@v4 # Use v4 for potential improvements
        with:
          name: app-debug.apk
          path: app/build/outputs/apk/debug/*.apk
